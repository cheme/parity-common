[package]
name = "parity-crypto"
version = "0.3.1"
authors = ["Parity Technologies <admin@parity.io>"]
repository = "https://github.com/paritytech/parity-common"
description = "Crypto utils used by ethstore and network."
license = "GPL-3.0"
autobenches = false

[[bench]]
name = "bench"
harness = false


[dependencies]
quick-error = "1.2.2"
tiny-keccak = "1.4"
scrypt = { version = "0.1.1", default-features = false }
ripemd160 = "0.8.0"
sha2 = "0.8.0"
digest = "0.8"
hmac = "0.7"
aes = "0.3.2"
aes-ctr = "0.3.0"
block-modes = "0.3.3"
pbkdf2 = "0.3.0"
constant_time_eq = "0.1.3"
lazy_static = "1.0" # for secp
parity-util-mem = { version = "0.1", path = "../parity-util-mem" }


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
#secp256k1 = "0.11"
secp256k1 = { git = "https://github.com/cheme/rust-secp256k1", branch = "parity-eth" }
libsecp256k1_alt = { version = "0.2", optional = true, package = "libsecp256k1" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
subtle = { version = "1.0" }
libsecp256k1_alt = { version = "0.2", package = "libsecp256k1" }

[dev-dependencies]
libsecp256k1_alt = { version = "0.2", package = "libsecp256k1" }
#criterion = "0.2.11"
rand = "0.4"


[features]
# expose alternative wasm32 implementation for testing and benchmarks
alt = ["libsecp256k1_alt"]
nightly = ["subtle/nightly"]
volatile-erase = ["parity-util-mem/volatile-erase"]
